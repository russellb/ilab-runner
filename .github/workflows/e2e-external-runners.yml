# SPDX-License-Identifier: Apache-2.0

name: e2e external runners

on:
  workflow_dispatch:
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - '.github/workflows/e2e.yml'
      - 'scripts/basic-workflow-tests.sh'
      - 'scripts/test-data/*'

jobs:
  start-runner:
    name: Start self-hosted EC2 runners
    runs-on: ubuntu-latest
    outputs:
      ubuntu-label: ${{ steps.start-ec2-runner-ubuntu.outputs.label }}
      fedora-label: ${{ steps.start-ec2-runner-fedora.outputs.label }}
      ubuntu-instance-id: ${{ steps.start-ec2-runner-ubuntu.outputs.ec2-instance-id }}
      fedora-instance-id: ${{ steps.start-ec2-runner-fedora.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start Ubuntu EC2 runner
        id: start-ec2-runner-ubuntu
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-01eaf86de30bb7fb4
          ec2-instance-type: g4dn.2xlarge
          subnet-id: subnet-c8db48e9
          security-group-id: sg-0cb244bcab1df59cc
          iam-role-name: InstructLab-e2e-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "brent-ilab-ec2-github-runner-ubuntu"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
      - name: Start Fedora EC2 runner
        id: start-ec2-runner-fedora
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0fea12d67307bd0c5
          ec2-instance-type: g4dn.2xlarge
          subnet-id: subnet-c8db48e9
          security-group-id: sg-0cb244bcab1df59cc
          iam-role-name: InstructLab-e2e-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "brent-ilab-ec2-github-runner-fedora"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]

  e2e:
    name: E2E Test on ${{ matrix.os }}
    needs: start-runner
    runs-on: ${{ matrix.os == 'ubuntu-22.04' && needs.start-runner.outputs.ubuntu-label || needs.start-runner.outputs.fedora-label }}
    strategy:
      matrix:
        os: [ubuntu-22.04, fedora-40]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: 3.11
          cache: pip
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
        continue-on-error: true

      - name: Verify Python 3.11 on Fedora
        if: ${{ matrix.os == 'fedora-40' }}
        run: |
          python3.11 --version

      - name: Verify OS
        run: cat /etc/os-release

      - name: Install Packages
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            cat /etc/os-release
            sudo apt-get update
            sudo apt-get -y upgrade
            sudo apt-get install -y cuda-toolkit git cmake build-essential virtualenv libaio-dev
            nvidia-smi
            sudo ls -l /dev/nvidia*
          else
            cat /etc/os-release
            sudo dnf -y upgrade
            sudo dnf install gcc gcc-c++ make git python3.11 python3.11-devel clang17
            python3.11 -m ensurepip
          fi

      - name: Remove llama-cpp-python from cache
        run: |
          pip cache remove llama_cpp_python

      - name: Install ilab
        run: |
          export PATH="/home/runner/.local/bin:/usr/local/cuda/bin:$PATH"
          python3.11 -m venv venv
          . venv/bin/activate
          sed 's/\[.*\]//' requirements.txt > constraints.txt
          python3.11 -m pip cache remove llama_cpp_python
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            CMAKE_ARGS="-DLLAMA_CUBLAS=on" python -m pip install --no-binary llama_cpp_python -c constraints.txt llama_cpp_python
          else
            CUDAHOSTCXX=$(which clang++-17) CMAKE_ARGS="-DLLAMA_CUBLAS=on" python -m pip install --no-binary llama_cpp_python -c constraints.txt llama_cpp_python
          fi
          python3.11 -m pip install bitsandbytes
          python3.11 -m pip install .

      - name: Run e2e test
        run: |
          . venv/bin/activate
          ./scripts/basic-workflow-tests.sh -cm

  stop-runner:
    name: Stop self-hosted EC2 runners
    needs:
      - start-runner
      - e2e
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop Ubuntu EC2 runner
        uses: machulav/ec2-github-runner@v2
        continue-on-error: true
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.ubuntu-label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ubuntu-instance-id }}
      - name: Stop Fedora EC2 runner
        uses: machulav/ec2-github-runner@v2
        continue-on-error: true
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.fedora-label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.fedora-instance-id }}
