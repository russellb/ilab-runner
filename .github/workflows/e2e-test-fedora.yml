# SPDX-License-Identifier: Apache-2.0

name: E2E (Fedora-40)

on:
  workflow_dispatch:
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - '.github/workflows/e2e.yml'
      - 'scripts/basic-workflow-tests.sh'
      - 'scripts/test-data/*'

jobs:
  start-runner:
    name: Start external EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-0fea12d67307bd0c5
          ec2-instance-type: g4dn.2xlarge
          subnet-id: subnet-c8db48e9
          security-group-id: sg-0cb244bcab1df59cc
          iam-role-name: InstructLab-e2e-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "brent-ilab-ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]

  e2e:
    name: E2E Test
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

#      - name: Setup Python 3.11
#        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
#        with:
#          python-version: 3.11
#          cache: pip
#          cache-dependency-path: |
#            **/pyproject.toml
#            **/requirements*.txt
#        continue-on-error: true

      - name: Install Packages
        run: |
          cat /etc/os-release
          sudo dnf -y upgrade
          # The following pkgs are already installed on the runner but leaving for brevity
          sudo dnf install gcc gcc-c++ make git python3.11 python3.11-devel clang17
          python3.11 -m ensurepip
      - name: Remove llama-cpp-python from cache
        run: |
          pip cache remove llama_cpp_python

#      - name: Cache huggingface
#        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
#        with:
#          path: ~/.cache/huggingface
#          # config contains DEFAULT_MODEL
#          key: huggingface-${{ hashFiles('src/instructlab/configuration.py') }}

      - name: Install ilab
        run: |
          export PATH="/home/runner/.local/bin:/usr/local/cuda/bin:$PATH"
          python3.11 -m venv --upgrade-deps venv
          . venv/bin/activate
          sed 's/\[.*\]//' requirements.txt > constraints.txt
          python3.11 -m pip cache remove llama_cpp_python
          CFLAGS="-I/usr/include" LDFLAGS="-L/usr/lib64 -laio" CUDAHOSTCXX=$(which clang++-17) pip install --no-binary llama_cpp_python -c constraints.txt llama_cpp_python==0.2.79

          CFLAGS="-I/usr/include" LDFLAGS="-L/usr/lib64" CUDAHOSTCXX=$(which clang++-17) CMAKE_ARGS="-DLLAMA_CUBLAS=on" python3.11 -m pip install --no-binary llama_cpp_python -c constraints.txt llama_cpp_python
          python3.11 -m pip install bitsandbytes
          python3.11 -m pip install .

      - name: Run e2e test
        run: |
          . venv/bin/activate
          ./scripts/basic-workflow-tests.sh -cm

  stop-runner:
    name: Stop external EC2 runner
    needs:
      - start-runner
      - e2e
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
