# SPDX-License-Identifier: Apache-2.0

name: E2E (NVIDIA Tesla T4 x1)

on:
  workflow_dispatch:

jobs:
  start-runner:
    name: Start external EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@fcfb31a5760dad1314a64a0e172b78ec6fc8a17e # v2.3.6
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id:
          ec2-instance-type: g4dn.2xlarge
          subnet-id: subnet-02d230cffd9385bd4
          security-group-id: sg-06300447c4a5fbef3
          iam-role-name: instructlab-ci-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "instructlab-ci-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]

  e2e:
    name: E2E Test
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Install Packages
        run: |
          cat /etc/os-release
          sudo dnf -y upgrade
          sudo dnf install -y gcc gcc-c++ make git python3.11 python3.11-devel

      - name: Remove llama-cpp-python from cache
        run: |
          pip cache remove llama_cpp_python

      - name: Install ilab
        run: |
          export PATH="/home/ec2-user/.local/bin:/usr/local/cuda/bin:$PATH"
          python3.11 -m venv --upgrade-deps venv
          . venv/bin/activate
          sed 's/\[.*\]//' requirements.txt > constraints.txt
          python3.11 -m pip cache remove llama_cpp_python
          CFLAGS="-I/usr/include" LDFLAGS="-L/usr/lib64 -laio" CUDAHOSTCXX=$(which clang++-17) pip install --no-binary llama_cpp_python -c constraints.txt llama_cpp_python==0.2.79

          CFLAGS="-I/usr/include" LDFLAGS="-L/usr/lib64" CUDAHOSTCXX=$(which clang++-17) CMAKE_ARGS="-DLLAMA_CUBLAS=on" python3.11 -m pip install --no-binary llama_cpp_python -c constraints.txt llama_cpp_python
          python3.11 -m pip install bitsandbytes
          python3.11 -m pip install .

      - name: Run e2e test
        run: |
          . venv/bin/activate
          ./scripts/basic-workflow-tests.sh -cm

  stop-runner:
    name: Stop external EC2 runner
    needs:
      - start-runner
      - e2e
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
