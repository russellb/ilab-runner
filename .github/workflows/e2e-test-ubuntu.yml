# SPDX-License-Identifier: Apache-2.0

name: E2E (Ubuntu-22.04)

on:
  workflow_dispatch:
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - '.github/workflows/e2e.yml'
      - 'scripts/basic-workflow-tests.sh'
      - 'scripts/test-data/*'

jobs:
  start-runner:
    name: Start external EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-01eaf86de30bb7fb4
          ec2-instance-type: g4dn.2xlarge
          subnet-id: subnet-c8db48e9
          security-group-id: sg-0cb244bcab1df59cc
          iam-role-name: InstructLab-e2e-runner
          aws-resource-tags: >
            [
              {"Key": "Name", "Value": "brent-ilab-ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]

  e2e:
    name: E2E Test
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: 3.11
          cache: pip
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
        continue-on-error: true

      - name: Install Packages
        run: |
          cat /etc/os-release
          sudo apt-get update
          sudo apt-get -y upgrade
          sudo apt-get install -y cuda-toolkit git cmake build-essential virtualenv libaio-dev
          nvidia-smi
          sudo ls -l /dev/nvidia*

      - name: Remove llama-cpp-python from cache
        run: |
          pip cache remove llama_cpp_python

      - name: Remove apt-get cache
        run: |
          sudo apt-get clean

#      - name: Cache huggingface
#        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
#        with:
#          path: ~/.cache/huggingface
#          # config contains DEFAULT_MODEL
#          key: huggingface-${{ hashFiles('src/instructlab/configuration.py') }}

      - name: Install ilab
        run: |
          export PATH="/home/runner/.local/bin:/usr/local/cuda/bin:$PATH"
          python3 -m venv venv
          . venv/bin/activate
          sed 's/\[.*\]//' requirements.txt > constraints.txt
          python3 -m pip cache remove llama_cpp_python
          CMAKE_ARGS="-DLLAMA_CUBLAS=on" python3 -m pip install --no-binary llama_cpp_python -c constraints.txt llama_cpp_python
          # needed for --4-bit-quant option to ilab model train
          python3 -m pip install bitsandbytes
          python3 -m pip install .

      - name: Run e2e test
        run: |
          . venv/bin/activate
          ./scripts/basic-workflow-tests.sh -cm

  stop-runner:
    name: Stop external EC2 runner
    needs:
      - start-runner
      - e2e
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
